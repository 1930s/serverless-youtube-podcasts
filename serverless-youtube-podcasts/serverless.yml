service: serverless-youtube-podcasts

frameworkVersion: ">=1.0.0 <2.0.0"

package:
  exclude:
    - node_modules/**


# Provider
provider:
  name: aws
  runtime: python2.7
  region: eu-west-1
  environment:
    AWS_ACCOUNTID: ${file(serverless.env.yml):awsAccountId}
    VIDEOS_TABLE: ${self:service}-videos-${opt:stage,self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:Scan
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.VIDEOS_TABLE}"
    - Effect: Allow
      Action:
        - sns:Publish
      Resource: "arn:aws:sns:${opt:region, self:provider.region}:*:updateVideo"


# Functions 
functions:

  playlistFeed:
    handler: handler.playlist_feed
    events:
      - http:
          path: playlists/{id}
          method: get

  videoPlaybackUrl:
    handler: handler.video_playback_url
    events:
      - http:
          path: videos/{id}
          method: get

  updateVideo:
    handler: handler.update_video
    events:
      - sns:
          topicName: updateVideo
          displayName: Update video pipeline


# Plugins
plugins:
  - serverless-python-requirements


# Resources
resources:
  Resources:
    VideosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.VIDEOS_TABLE}